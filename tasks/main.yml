---

- name: Install nginx base package
  apt:
    pkg: nginx
    state: present
  when:
    - manage_nginx|bool
    - ansible_os_family == 'Debian'

- name: Install nginx base package
  yum:
    pkg: nginx
    state: present
  when:
    - manage_nginx|bool
    - ansible_os_family == 'RedHat'

- name: Create dhparams file
  command: openssl dhparam -out {{nginx_dhparams_file}} {{nginx_dhparams_size}}
  args:
    creates: "{{nginx_dhparams_file}}"
  notify: reload nginx
  when: manage_nginx|bool

- name: Create sites-available / sites-enabled directories
  file:
    state: directory
    path: "{{item.path}}"
    owner: "{{item.owner|default('root')}}"
    group: "{{item.group|default('root')}}"
    mode: "{{item.mode|default(0755)}}"
  with_items:
    - { path: "/etc/nginx/sites-available" }
    - { path: "/etc/nginx/sites-enabled" }
  notify: reload nginx
  when: manage_nginx|bool

- name: Template default nginx config files
  template:
    src: "{{item.src}}"
    dest: "{{item.dest}}"
    owner: "{{item.owner|default('root')}}"
    group: "{{item.group|default('root')}}"
    mode: "{{item.mode|default('0644')}}"
    force: "{{item.force|default('yes')}}"
    backup: true
  with_items:
    - { src: "pam-nginx.j2", dest: "/etc/pam.d/nginx-allusers" }
    - { src: "etc-nginx.conf.j2", dest: "/etc/nginx/nginx.conf" }
    - { src: "tls_params.j2", dest: "/etc/nginx/tls_params" }
    - { src: "nginx-default.j2", dest: "/etc/nginx/sites-available/default" }
  notify: reload nginx
  when: manage_nginx|bool

- name: Template site-specific configs
  template:
    src: "extra-site.conf.j2"
    dest: "/etc/nginx/sites-available/{{site.name}}.conf"
    owner: "{{site.owner|default('root')}}"
    group: "{{site.group|default('root')}}"
    mode: "{{site.mode|default('0644')}}"
    force: "{{site.force|default('yes')}}"
    backup: true
  loop: "{{nginx_sites}}"
  loop_control:
    loop_var: site
  notify: reload nginx
  when: manage_nginx|bool
  tags:
    - nginxextra

- name: Enable nginx default
  file:
    src: "/etc/nginx/sites-available/default"
    dest: "/etc/nginx/sites-enabled/000default"
    state: "link"
  when: manage_nginx|bool

- name: Enable nginx sites
  file:
    src: "/etc/nginx/sites-available/{{site.name}}.conf"
    dest: "/etc/nginx/sites-enabled/{{site.name}}.conf"
    state: "{% if site.disabled|default(false) %}absent{%else%}link{%endif%}"
  loop: "{{nginx_sites}}"
  loop_control:
    loop_var: site
  notify: reload nginx
  when: manage_nginx|bool
